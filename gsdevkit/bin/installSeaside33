# arg1 is the content id: GLASS, GLASS1
# arg2 is the GemStone version id: 3215, 339, 343
#
# Sequence:
#
#	createStone -g battery_339 3.3.9
# installSeaside32 GsDevKit 339 
#	upgradeImage seaside_GsDevKit 339
# upgradeSeasideImage seaside_GsDevKit 339 $GS_HOME/shared/repos/GsDevKit_upgrade/bin/seaside3_upgrade.topaz
#
set -e
content="$1"	# GLASS1, GsDevKit, TODE
version="$2"	# 3215, 339, 343
shift
shift

userName='DataCurator'
symDictName='UserGlobals'
userName='seaside'
symDictName='Seaside'

. defStone.env

rm -f *.log *.out

sourceStoneName="battery_${version}"
sourceStoneDir="$GS_HOME/server/stones/${sourceStoneName}"


export upgradeLogDir=`pwd`/upgradeLogDir

pushd "${upgradeLogDir}" >& /dev/null
	rm -f *.log *.out

	export upgradeDir=${sourceStoneDir}/product/upgrade

if [ "$userName" != "DataCurator" ] ; then 

	newExtent -s ${sourceStoneDir}/product/bin/extent0.dbf $sourceStoneName

	startTopaz $sourceStoneName -lq << EOF
		iferr 1 stk
		iferr 2 stack
		iferr 3 exit 1
		display oops
		limit bytes 200

		set user SystemUser pass swordfish
		login

		run
			"GLASS is not yet ready for Portable streams, nor Legacy streams with ANSI polarity"
			Stream installLegacyStreamImplementation.
			(Globals at: #'PositionableStream_position') == #'ANSI'
			   ifTrue: [
		    	 Globals at: #'PositionableStream_position' put: #'Legacy'.
		  	   PositionableStream compilePositionMethods ].
			Globals at: #StringConfiguration put: Unicode16.
			true
%

		commit
		errorCount
		logout

		set u DataCurator p swordfish
		login 
		run
			| seaside |
			seaside := AllUsers userWithId: '$userName' ifAbsent: [ nil ].
			seaside ~~ nil
			  ifTrue: [ 
			    AllUsers removeAndCleanup: seaside.
			    System commitTransaction.
			 ].
			(AllUsers 
			  addNewUserWithId: '$userName'
			  password: 'swordfish')
			    addPrivilege: #'CodeModification';
			    addPrivilege: #'UserPassword';
			    addPrivilege: #'OtherPassword';
			    yourself.
%

		commit
		errorCount
		logout

		set u $userName p swordfish
		login
 
		run
			System myUserProfile _createDictionary: #'$symDictName' at: 1.
			UserGlobals at: #BootstrapSymbolDictionaryName put: #'$symDictName'.
			true
%
		commit
		errorCount

		input $upgradeDir/installMaster30.topaz

		commit
		errorcount
		logout
		exit
EOF
else
		newExtent -s ${sourceStoneDir}/product/bin/extent0.seaside.dbf $sourceStoneName
fi
	if [ "$content" = "GLASS1" ] ; then
		startTopaz $sourceStoneName -lq -T 500000 << EOF
			iferr 1 stk
			iferr 2 stack
			iferr 3 exit 1
			display oops
			limit bytes 200
			set u $userName p swordfish
			login 

			run
				| gsUpgrader |
				Gofer new
					package: 'GsUpgrader-Core';
					url: 'http://ss3.gemtalksystems.com/ss/gsUpgrader';
    			load.
				gsUpgrader := System myUserProfile objectNamed: 'GsUpgrader'.
				gsUpgrader batchErrorHandlingDo: [
  				Transcript
    				cr;
    				show: '-----Upgrade GLASS1 using gsUpgrader'.
  				gsUpgrader upgradeGLASS1 ].
%

			commit
			errorCount
			logout
			exit
EOF
	elif [ "$content" = "GsDevKit" ] ; then
		startTopaz $sourceStoneName -lq -T 500000 << EOF
			iferr 1 stk
			iferr 2 stack
			iferr 3 exit 1
			display oops
			limit bytes 200
			set u $userName p swordfish
			login 

			run
				| gsUpgrader |
				Gofer new
					package: 'GsUpgrader-Core';
					url: 'http://ss3.gemtalksystems.com/ss/gsUpgrader';
    			load.
				gsUpgrader := System myUserProfile objectNamed: 'GsUpgrader'.
				gsUpgrader batchErrorHandlingDo: [
  				Transcript
    				cr;
    				show: '-----Upgrade GsDevKit using gsUpgrader'.
  				gsUpgrader upgradeGsDevKit ].
%

			commit
			errorCount
			logout
			exit
EOF
	elif [ "$content" = "TODE" ] ; then
		todeLoad $sourceStoneName
	else
		echo "Unknown content type $content"
		exit 1
	fi

	startTopaz $sourceStoneName -lq -T 500000 << EOF
		iferr 1 stk
		iferr 2 stack
		iferr 3 exit 1
		display oops
		limit bytes 200
		set u $userName p swordfish
		login 

		run
			MCPlatformSupport autoCommit: true.
			true
%
		commit

		run
			GsDeployer deploy: [
  			Metacello new
    			baseline: 'Seaside3';
    			repository: 'github://SeasideSt/Seaside:master/repository';
    			onLock: [ :ex | ex honor ];
    			load: #('CI').
			].
			true
%
		commit
		errorCount
		logout
		exit
EOF

	stopStone $sourceStoneName
	cp ${sourceStoneDir}/extents/extent0.dbf ../snapshots/extent0_${userName}_${content}_${version}.dbf
	startStone $sourceStoneName

	if [ "$userName" != "DataCurator" ] ; then
		startTopaz $sourceStoneName -lq < $GS_HOME/shared/repos/GsDevKit_upgrade/bin/runSeasideImageTests
	else
		startTopaz $sourceStoneName -lq < $GS_HOME/shared/repos/GsDevKit_upgrade/bin/runImageTests
	fi
popd


