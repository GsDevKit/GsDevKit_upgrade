#
#	login as SystemUser to to prepareImage work
#
iferr 1 stk
iferr 2 stack
iferr 3 exit 1
display oops
limit bytes 200
set u SystemUser p swordfish
login

run
	"Install upgrade support code"
	| symbolName session symbolList symbolDict dictName symDictSlot |
	dictName := 'GsDevKit_Upgrade_SymDict_private'.
	symbolName := dictName asSymbol.
	session := GsCurrentSession currentSession.
	symbolList := session symbolList.
	symbolDict := symbolList
		detect: [ :each | (each at: symbolName ifAbsent: [ nil ]) == each ]
		ifNone: [ 
			| newDict |
			newDict := SymbolDictionary new
				name: symbolName;
				objectSecurityPolicy: symbolList objectSecurityPolicy;
				yourself.
			symDictSlot := System myUserProfile symbolList size.
			System myUserProfile insertDictionary: newDict at: symDictSlot + 1.
			newDict ].
	UserGlobals at: dictName asSymbol put: symbolDict.
	true
%

commit

! expects symbol dictionary named GsuAbstractGsDevKitUpgrade to exist (at the moment)
input $GS_HOME/shared/repos/GsDevKit_upgrade/gemstone/GsDevKit_upgrade.gs
 
run
	(GsDevKit_Upgrade_SymDict_private at: #'GsuAbstractGsDevKitUpgrade') _symbolDictionary: GsDevKit_Upgrade_SymDict_private.
	UserGlobals removeKey: GsDevKit_Upgrade_SymDict_private name.
	true
%
commit

run
	
	UserGlobals
		at: #GsDevKit_Image_Upgrade
		put: 
			((GsuAbstractGsDevKitUpgrade 'DataCurator')
				bootstrapRepositoryDirectory: GsPackageLibrary getMonticelloRepositoryDirectory
				yourself).

	System myUserProfile removeDictionaryAt: (System myUserProfile symbolList size).
	true
%
commit

errorCount

exit 

