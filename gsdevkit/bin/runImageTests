# arg1 is the content id: GLASS, GLASS1, TODE
# arg2 is the GemStone version id: 3215, 339, 343
# arg3 (optional) seaside user name (default DataCurator)
#
# Sequence:
#
#	createStone -g battery_339 3.3.9
# installGLASS1 339
#	upgradeImage GLASS1 339
#
# upgradeSeaideImage GLASS1 339
#	runImageTestsGLASS1 339
#
# upgradeSeaideImage GLASS1 339 seaside $GS_HOME/shared/repos/GsDevKit_upgrade/bin/seaside3_upgrade.topaz
#	runImageTestsGLASS1 339 seaside
#

theArgs="$*"
set -e

contents="$1"	# GLASS, GLASS1, TODE
version="$2"	# 3215, 339, 343
shift
shift

username="DataCurator"
if [ $# -gt 0 ]; then
	username="$1"
	shift
fi

newExtent -s snapshots/extent0_preparedSeasideImage_${contents}_${version}.dbf $GEMSTONE_NAME

startTopaz $GEMSTONE_NAME -lq << EOF > ${upgradeLogDir}/runImageTests_${contents}_${version}.out  2>&1
iferr 1 stk
iferr 2 stack
iferr 3 exit 1
display oops
display resultcheck
limit bytes 200
set u $username p swordfish
login

run
	| results defects |
	GsFile gciLogServer: 'Running image test cases'.
	GsFile gciLogServer: '------------------------'.
	GsFile gciLogServer: '------------------------'.
	results := TestCase suite run .
	defects := results defects.
	GsFile gciLogServer: results printString.
	defects isEmpty ifTrue: [
		GsFile gciLogServer: '------------------------'.
		^ true
	].
	defects do: [:each | 
		GsFile gciLogServer: each printString ].
	GsFile gciLogServer: '------------------------'.
	^false
%

errorCount

exit 

EOF
